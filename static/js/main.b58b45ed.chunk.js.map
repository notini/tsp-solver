{"version":3,"sources":["logo.svg","utils/utils.js","objects/Particle.js","utils/pso_utils.js","utils/solutionMethods.js","components/Graph.js","components/Loading.jsx","components/Header.jsx","components/Contact.jsx","components/LeftMenu.jsx","components/Result.jsx","components/MainCanvas.jsx","objects/Result.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","utils","two_opt","route","i","k","new_route","slice","concat","reverse","length","assemble_dist_matrix","coords","dist_matrix","this","createEmptyMatrix","j","euclidianDistance","assembleNeighborhood","solution","neighbors","push","swap","aux","getSolutionCost","cost","Math","sqrt","pow","dimension","matrix","Array","shuffleArray","array","floor","random","_ref","Particle","position","Object","classCallCheck","position_cost","velocity","personal_best","personal_best_cost","pso_utils","size","swarm","best_global_cost","Infinity","best_position","splice","new_route_cost","includes","particle","global_best_position","alpha","beta","personal_best_aux","global_best_aux","swap_operator","indexOf","forEach","solutionMethods","globalBest","callback","start","performance","now","improvement","bestCost","new_cost","toFixed","tabuTenure","attemptsWithoutImprovement","bestCandidateCost","attemptCounter","bestCandidate","tabu","neighborhood","neighbor","neighbor_cost","pop","particles","_pso_utils$assembleSw","_pso_utils$assembleSw2","slicedToArray","resetValue","multiplier","console","log","new_position","new_position_cost","_ref2","_ref3","Graph","nodes","width","height","s","sketch","cities","setup","createCanvas","noLoop","v","createVector","draw","background","fill","ellipse","x","y","stroke","strokeWeight","noFill","line","Loading","state","react_default","a","createElement","alt","src","process","id","Component","Header","className","Contact","esm","Provider","value","target","rel","href","index_esm","style","class","verticalAlign","fontSize","LeftMenu","selectedMethod","setState","document","getElementById","selectedIndex","params","_this2","htmlFor","type","defaultValue","components_Header","lineHeight","marginRight","disabled","props","solving","marginLeft","padding","onClick","onGenerateGraph","onChange","handleMethodChange","bind","onSolve","onSolveCallback","components_Loading","components_Contact","Result","method","text","routeCost","elapsedTime","cName","active","result","local","pso","fontWeight","onShowResult","_this3","_ref4","buildShowButton","deleteBtn","onDeleteResult","Fragment","onDisplayInitialRoute","undefined","float","MainCanvas","marginTop","results","map","key","activeId","backgroundColor","components_Result","initialRoute","App","canvas","graph","test","graphId","graphWidth","clientWidth","graphHeight","clientHeight","toConsumableArray","item","index","full","innerHTML","resetCanvasDiv","g","GraphClass","p5","defineActive","ResultObj","buildResult","solutionMethod","setTimeout","components_LeftMenu","handleGenerateGraph","handleSolve","handleSolveCallback","components_MainCanvas","handleDeleteResult","handleShowResult","handleDisplayInitialRoute","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b58b45ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default {\n  two_opt: function(route, i, k) {\n    let new_route = route.slice(0, i);\n    new_route = new_route.concat(route.slice(i, k).reverse());\n    new_route = new_route.concat(route.slice(k, route.length));\n    return new_route;\n  },\n  assemble_dist_matrix: function(coords) {\n    let dist_matrix = this.createEmptyMatrix(coords.length);\n    for (let i = 0; i < coords.length; i++) {\n      for (let j = 0; j < coords.length; j++) {\n        dist_matrix[i][j] = this.euclidianDistance(coords, i, j);\n        dist_matrix[j][i] = this.euclidianDistance(coords, i, j);\n      }\n    }\n    return dist_matrix;\n  },\n  assembleNeighborhood: function(solution) {\n    let neighbors = [];\n    for (let i = 1; i <= solution.length; i++) {\n      for (let j = i + 1; j <= solution.length; j++) {\n        neighbors.push(this.two_opt(solution, i, j));\n      }\n    }\n    return neighbors;\n  },\n  swap: function(route, i, k) {\n    let new_route = route;\n    let aux = new_route[i];\n    new_route[i] = new_route[k];\n    new_route[k] = aux;\n    return new_route;\n  },\n  getSolutionCost: function(route, dist_matrix) {\n    let cost = 0;\n    for (let i = 0; i < route.length - 1; i++) {\n      cost += dist_matrix[route[i]][route[i + 1]];\n    }\n    cost += dist_matrix[route[route.length - 1]][route[0]];\n    return cost;\n  },\n  euclidianDistance: function(coords, i, j) {\n    return Math.sqrt(\n      Math.pow(coords[i][0] - coords[j][0], 2) +\n        Math.pow(coords[i][1] - coords[j][1], 2)\n    );\n  },\n  createEmptyMatrix: function(dimension) {\n    let matrix = [];\n    for (let i = 0; i < dimension; i++) {\n      matrix[i] = new Array(dimension);\n    }\n    return matrix;\n  },\n  shuffleArray: function(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n};\n","export default class Particle {\n  constructor(position, cost) {\n    this.position = position;\n    this.position_cost = cost;\n    this.velocity = [];\n    this.personal_best = position;\n    this.personal_best_cost = cost;\n  }\n}\n","import utils from \"./utils\";\nimport Particle from \"../objects/Particle\";\n\nexport default {\n  assembleSwarm: (solution, dist_matrix, size) => {\n    let swarm = [];\n    let best_global_cost = Infinity;\n    let best_position = [];\n    while (swarm.length < size) {\n      let new_route = utils.shuffleArray(solution.slice(1, solution.length));\n      new_route.splice(0, 0, 0);\n      const new_route_cost = utils.getSolutionCost(new_route, dist_matrix);\n      if (!swarm.includes(new_route)) {\n        swarm.push(new Particle(new_route, new_route_cost));\n        if (new_route_cost < best_global_cost) {\n          best_global_cost = new_route_cost;\n          best_position = new_route;\n        }\n      }\n    }\n    return [swarm, best_position, best_global_cost];\n  },\n  updateVelocity: (particle, global_best_position, alpha, beta) => {\n    //let temp_velocity = [];\n    let personal_best_aux = particle.personal_best;\n    let global_best_aux = global_best_position;\n    for (let i = 1; i < particle.position.length; i++) {\n      if (Math.random() <= alpha) {\n        if (particle.position[i] !== personal_best_aux[i]) {\n          let swap_operator = [\n            i,\n            personal_best_aux.indexOf(particle.position[i]),\n            alpha\n          ];\n          particle.velocity.push(swap_operator);\n          personal_best_aux = utils.swap(\n            personal_best_aux,\n            swap_operator[0],\n            swap_operator[1]\n          );\n        }\n      }\n      //temp_velocity.clear(); // not needed. trying something different.\n      if (Math.random() <= beta) {\n        if (particle.position[i] !== global_best_aux[i]) {\n          let swap_operator = [\n            i,\n            global_best_aux.indexOf(particle.position[i]),\n            alpha\n          ];\n          particle.velocity.push(swap_operator);\n          global_best_aux = utils.swap(\n            global_best_aux,\n            swap_operator[0],\n            swap_operator[1]\n          );\n        }\n      }\n    }\n  },\n  resetVelocity: function(swarm) {\n    swarm.forEach(particle => {\n      particle.velocity = [];\n    });\n    return swarm;\n  }\n};\n","import utils from \"./utils\";\nimport pso_utils from \"./pso_utils\";\n\nexport default {\n  localSearch: function(globalBest, dist_matrix, callback) {\n    let start = performance.now();\n    let improvement = true;\n    let bestCost = utils.getSolutionCost(globalBest, dist_matrix);\n    while (improvement) {\n      improvement = false;\n      for (let i = 1; i <= globalBest.length; i++) {\n        for (let j = i + 1; j <= globalBest.length; j++) {\n          let new_route = utils.two_opt(globalBest, i, j);\n          let new_cost = utils.getSolutionCost(new_route, dist_matrix);\n          if (new_cost < bestCost) {\n            globalBest = new_route;\n            bestCost = new_cost;\n            improvement = true;\n          }\n        }\n      }\n      if (improvement === false) {\n        callback(\n          globalBest,\n          bestCost.toFixed(2),\n          ((performance.now() - start) / 1000).toFixed(2)\n        );\n      }\n    }\n  },\n  tabuSearch: function(\n    globalBest,\n    dist_matrix,\n    tabuTenure,\n    attemptsWithoutImprovement,\n    callback\n  ) {\n    let start = performance.now();\n    let attemptCounter = 1;\n    let bestCandidate = globalBest;\n    let tabu = [bestCandidate];\n    let bestCandidateCost;\n    let best_global_cost = utils.getSolutionCost(globalBest, dist_matrix);\n    while (attemptCounter < attemptsWithoutImprovement) {\n      let neighborhood = utils.assembleNeighborhood(bestCandidate);\n      bestCandidate = neighborhood[0];\n      bestCandidateCost = utils.getSolutionCost(bestCandidate, dist_matrix);\n      neighborhood.forEach(neighbor => {\n        let neighbor_cost = utils.getSolutionCost(neighbor, dist_matrix);\n        if (!tabu.includes(neighbor) && neighbor_cost < bestCandidateCost) {\n          bestCandidate = neighbor;\n          bestCandidateCost = neighbor_cost;\n        }\n      });\n      if (bestCandidateCost < best_global_cost) {\n        globalBest = bestCandidate;\n        best_global_cost = bestCandidateCost;\n        attemptCounter = 1;\n        //console.log(\"improved global best! \" + best_global_cost);\n      } else {\n        attemptCounter += 1;\n      }\n      tabu.push(bestCandidate);\n      if (tabu.length > tabuTenure) tabu.pop(0);\n      attemptCounter += 1;\n    }\n    callback(\n      globalBest,\n      best_global_cost.toFixed(2),\n      ((performance.now() - start) / 1000).toFixed(2)\n    );\n  },\n  PSO: function(\n    globalBest,\n    dist_matrix,\n    particles,\n    attemptsWithoutImprovement,\n    callback\n  ) {\n    let start = performance.now();\n    let attemptCounter = 0,\n      improvement = true;\n    const alpha = 0.7,\n      beta = 0.6;\n    let [swarm, best_position, best_global_cost] = pso_utils.assembleSwarm(\n      globalBest,\n      dist_matrix,\n      particles\n    );\n    let resetValue = (attemptsWithoutImprovement * 20) / 100;\n    let multiplier = 1;\n    while (attemptCounter < attemptsWithoutImprovement) {\n      improvement = false;\n      console.log(attemptCounter)\n      if (attemptCounter === resetValue * multiplier) {\n        multiplier += 1;\n        swarm = pso_utils.resetVelocity(swarm);\n      }\n      swarm.forEach(particle => {\n        pso_utils.updateVelocity(particle, globalBest, alpha, beta);\n        particle.velocity.forEach(swap_operator => {\n          let new_position = utils.two_opt(\n            particle.position,\n            swap_operator[0],\n            swap_operator[1]\n          );\n          let new_position_cost = utils.getSolutionCost(\n            new_position,\n            dist_matrix\n          );\n          if (new_position_cost < particle.position_cost) {\n            [particle.position, particle.position_cost] = [\n              new_position,\n              new_position_cost\n            ];\n          }\n        });\n        if (particle.position_cost < particle.personal_best_cost) {\n          [particle.personal_best_cost, particle.personal_best] = [\n            particle.position_cost,\n            particle.position\n          ];\n        }\n        if (particle.position_cost < best_global_cost) {\n          //console.log(\"improved global best! \" + best_global_cost);\n          [best_global_cost, best_position, improvement, attemptCounter] = [\n            particle.position_cost,\n            particle.position,\n            true,\n            0\n          ];\n        }\n      });\n      if (!improvement) attemptCounter += 1;\n    }\n    callback(\n      best_position,\n      best_global_cost.toFixed(2),\n      ((performance.now() - start) / 1000).toFixed(2)\n    );\n  }\n};\n","class Graph {\n  //now i need to pass the coords here so the graph can be drawn\n  //then, figure out a way to update when the user asks to. when props change might be a good idea\n  constructor(nodes, coords, route, width, height) {\n    this.nodes = nodes;\n    this.route = route;\n    this.width = width;\n    this.height = height;\n    this.coords = coords;\n    this.s = function(sketch) {\n      let cities = [];\n      sketch.setup = function() {\n        sketch.createCanvas(width, height);\n        sketch.noLoop();\n        for (var i = 0; i < coords.length; i++) {\n          let v = sketch.createVector(coords[i][0], coords[i][1]);\n          cities[i] = v;\n        }\n      };\n\n      sketch.draw = function() {\n        sketch.background(0);\n        sketch.fill(255);\n        for (var i = 0; i < cities.length; i++) {\n          sketch.ellipse(cities[i].x, cities[i].y, 6, 6);\n        }\n\n        if (route.length > 0) {\n          sketch.stroke(255);\n          sketch.strokeWeight(2);\n          sketch.noFill();\n          for (i = 0; i < route.length - 1; i++) {\n            //sketch.vertex(cities[i].x, cities[i].y);\n            sketch.line(\n              cities[route[i]].x,\n              cities[route[i]].y,\n              cities[route[i + 1]].x,\n              cities[route[i + 1]].y\n            );\n            //the 'line' function might also be a good option\n          }\n          //return to depot\n          sketch.stroke(\"red\");\n          sketch.line(\n            cities[0].x,\n            cities[0].y,\n            cities[route[route.length - 1]].x,\n            cities[route[route.length - 1]].y\n          );\n          sketch.stroke(255);\n        }\n      };\n    };\n    //https://p5js.org/examples/hello-p5-drawing.html\n    //initialize 's' with the nodes and then update route\n  }\n\n  updateSketch(nodes, route) {\n    this.nodes = nodes;\n    this.route = route;\n  }\n}\n\nexport default Graph;\n","import React, { Component } from \"react\";\nimport \"../css/Loading.css\";\n/*import loading from \"./loading.gif\";*/\n\nclass Loading extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <img\n          alt=\"Loading..\"\n          src={process.env.PUBLIC_URL + \"/loading.gif\"}\n          height=\"50px\"\n          id='loading-icon'\n        />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport \"../css/Header.css\";\n\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"header\">\n        {\" \"}\n        <h3> TSP Instance Generator</h3>\n        <p>\n          The Travelling Salesman Problem (TSP) is one of the more well-known\n          combinatorial optimization problems in the field of operations research.\n        </p>\n        <p>\n          This page allows you to generate a random complete graph G = (V,E) with a |V| amount of\n          cities and solve the problem with three different common solution\n          methods: Greedy Algorithm with improvement by Local Search, Tabu Search and Particle Swarm Optimization.\n        </p>\n        <p>\n          Distance between cities is given by the Euclidean Distance (in pixels)\n          between them.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"../css/Contact.css\";\nimport \"../css/academicons.css\";\nimport { FaGithub, FaLinkedin, FaEnvelope} from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nclass Contact extends Component {\n  state = {};\n  render() {\n    return (\n      <div id=\"contactInfo\">\n        <h3> Vitor Notini Pontes</h3>\n        <p>\n          Full-stack developer working with Python, Javascript and Progress 4GL\n        </p>\n        <p> Masters student at the Universidade Federal de Lavras </p>\n        <IconContext.Provider value={{ size: \"2em\" }}>\n          <nav>\n            <ul>\n              <li>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://github.com/notini/\">\n                  {\" \"}\n                  <FaGithub />{\" \"}\n                </a>\n              </li>\n              <li>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/vitornotini/\">\n                  <FaLinkedin />\n                </a>\n              </li>\n              <li>\n                <a style={{}} target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://lattes.cnpq.br/8202145341729196\">\n                {/*<a class=\"ai ai-lattes\" style={{}}></a>*/}\n                <i class=\"ai ai-lattes\" style={{verticalAlign: '-20%',\n                                                      fontSize: '1.95em'}}></i>\n                </a>\n              </li>                \n              <li>\n                <a href=\"mailto:vitornotini@gmail.com\">                  \n                  <FaEnvelope />\n                </a>\n              </li>            \n            </ul>\n          </nav>\n        </IconContext.Provider>\n      </div>\n\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport \"../css/LeftMenu.css\";\nimport Loading from \"./Loading\";\nimport Header from \"./Header\";\nimport Contact from \"./Contact\";\n\nclass LeftMenu extends Component {\n  state = {\n    selectedMethod: 0 //local search default\n  };\n\n  componentDidMount() {}\n\n  handleMethodChange() {\n    this.setState({\n      selectedMethod: document.getElementById(\"solutionMethodSelect\")\n        .selectedIndex\n    });\n  }\n\n  render() {\n    let params;\n    let attemptsWithoutImprovement = (\n      <div>\n        <label htmlFor=\"inputAttemptsWithoutImprovement\">\n          Attempts Without Improvement:\n        </label>\n        <input\n          type=\"text\"\n          className=\"mb-2 mr-sm-2\"\n          id=\"inputAttemptsWithoutImprovement\"\n          defaultValue=\"100\"\n          size=\"1\"\n        />\n      </div>\n    );\n    if (this.state.selectedMethod === 1) {\n      params = (\n        <div id=\"params\">\n          <label htmlFor=\"inputTabuTenureSize\">Tabu tenure size:</label>\n          <input\n            type=\"text\"\n            className=\"mb-2 mr-sm-2\"\n            id=\"inputTabuTenureSize\"\n            defaultValue=\"50\"\n            size=\"1\"\n          />\n          {attemptsWithoutImprovement}\n        </div>\n      );\n    } else if (this.state.selectedMethod === 2) {\n      params = (\n        <div id=\"params\">\n          <label htmlFor=\"inputParticlesCount\">Particles:</label>\n          <input\n            type=\"text\"\n            className=\"mb-2 mr-sm-2\"\n            id=\"inputParticlesCount\"\n            defaultValue=\"25\"\n            size=\"1\"\n          />\n          {attemptsWithoutImprovement}\n        </div>\n      );\n    }\n\n    return (\n      <div id=\"leftMenu\" className=\"leftContainer\">\n        <Header />\n        <div id=\"content\" className=\"d-flex flex-column\">\n          <h2> Generate Graph </h2>\n          <div className=\"d-flex justify-content-center\">\n            <label htmlFor=\"inputVertices\">Cities:</label>\n            <input\n              type=\"text\"\n              id=\"inputVertices\"\n              defaultValue=\"100\"\n              style={{\n                lineHeight: \"1.15\",\n                fontSize: \"small\",\n                width: \"30px\",\n                height: \"20px\",\n                marginRight: \"2px\"\n              }}\n            />\n            <button\n              disabled={this.props.solving ? true : false}\n              style={{  marginLeft: \"0px\", \n                        height: \"20px\",\n                        width: '25px',\n                        padding: 0 }}\n              onClick={() =>\n                this.props.onGenerateGraph(\n                  document.getElementById(\"inputVertices\").value\n                )\n              }\n              className=\"btn btn-primary mb-2 btn-sm\"\n            >\n              Go\n            </button>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <label htmlFor=\"solutionMethodSelect\">Solution method:</label>\n            <select\n              style={{\n                fontSize: \"small\",\n                width: \"100px\",\n                height: \"20px\",\n                marginRight: \"2px\",\n                padding: 0\n              }}\n              className=\"form-control-sm\"\n              id=\"solutionMethodSelect\"\n              onChange={this.handleMethodChange.bind(this)}\n            >\n              <option>Local Search</option>\n              <option>Tabu Search</option>\n              <option>PSO</option>\n            </select>\n            <button\n              style={{  marginLeft: \"2px\", \n                        height: \"20px\",\n                        width: '50',\n                        padding: 0 }}\n              disabled={this.props.solving ? true : false}\n              onClick={() => {\n                this.props.onSolve(\n                  this.state.selectedMethod,\n                  this.props.onSolveCallback\n                );\n              }}\n              className=\"btn btn-primary mb-2 btn-sm\"\n            >\n              Solve{\" \"}\n            </button>\n          </div>\n          {this.state.params === 0 ? \"\" : params}\n          <div style={{\n            height: '10px'\n          }}>\n            {this.props.solving ? <Loading /> : \"\"}\n          </div>\n\n          <Contact />\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftMenu;\n","import React, { Component } from \"react\";\nimport \"../css/Result.css\";\n\nclass Result extends Component {\n  state = {};\n\n  buildShowButton(method) {\n    let text, routeCost, elapsedTime;\n    let cName = this.props.active[method]\n      ? \"btn btn-success btn-sm\"\n      : \"btn btn-primary btn-sm\";\n    switch (method) {\n      case 0:\n        [text, routeCost, elapsedTime] = [\n          \"Local Search\",\n          this.props.result.local.routeCost,\n          this.props.result.local.elapsedTime\n        ];\n        break;\n      case 1:\n        [text, routeCost, elapsedTime] = [\n          \"Tabu Search\",\n          this.props.result.tabu.routeCost,\n          this.props.result.tabu.elapsedTime\n        ];\n        break;\n      case 2:\n        [text, routeCost, elapsedTime] = [\n          \"PSO\",\n          this.props.result.pso.routeCost,\n          this.props.result.pso.elapsedTime\n        ];\n        break;\n    }\n    return (\n      <div className=\"d-sm-flex flex-row align-items-center\">\n        <div id=\"resultValues\">\n          <p style={{ fontWeight: \"bold\", padding: '0px', fontSize: '12px' }}>{text}</p>\n          <a style={{fontSize: '12px'}}> {\"Tour cost: \" + routeCost}  </a>\n          <a style={{fontSize: '12px'}}>Elapsed Time: {elapsedTime}s</a>\n        </div>\n        <button\n          className={cName}\n          style={{ marginRight: \"0px\" }}\n          onClick={() => {\n            this.props.onShowResult(this.props.id, method);\n            /*this.props.onClick(this.props.id, method);*/\n          }}\n        >\n          Show{\" \"}\n        </button>{\" \"}\n      </div>\n    );\n  }\n  render() {\n    const [local, tabu, pso] = [\n      this.buildShowButton(0),\n      this.buildShowButton(1),\n      this.buildShowButton(2)\n    ];\n    const deleteBtn = (\n      <button\n        id=\"deleteButton\"\n        className=\"btn btn-danger input-block-level btn-sm\"\n        onClick={() => {\n          this.props.onDeleteResult(this.props.id);\n        }}\n      >\n        {\" \"}\n        x{\" \"}\n      </button>\n    );\n    return (\n      <React.Fragment>\n        <div className=\"singleResult\">\n          <div className=\"resultWrapper\">\n            <button\n              className=\"btn btn-primary btn-sm\"\n              onClick={() => {\n                this.props.onDisplayInitialRoute(this.props.id);\n                /*this.props.onClick(this.props.id, -1);*/\n              }}\n            >\n              Initial Route{\" \"}\n            </button>{\" \"}\n            <div className=\"methodResult\">\n              {this.props.result.local.routeCost !== undefined ? local : \"\"}\n            </div>\n            <div className=\"methodResult\">\n              {this.props.result.tabu.routeCost !== undefined ? tabu : \"\"}\n            </div>\n            <div className=\"methodResult\">\n              {this.props.result.pso.routeCost !== undefined ? pso : \"\"}\n            </div>\n          </div>\n        </div>\n        <div style={{ width: \"3%\", float: \"right\", height: \"100%\" }}>\n          {deleteBtn}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Result;\n","import React, { Component } from \"react\";\nimport Result from \"./Result\";\nimport \"../css/MainCanvas.css\";\n\nclass MainCanvas extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div id=\"mainCanvas\">\n        {\" \"}\n        <div id=\"graph\">\n          {\" \"}\n          <p> Graph not initialized! </p>{\" \"}\n        </div>\n        <div id=\"results\">\n          {\" \"}\n          <h5 style={{ marginTop: \"10px\" }}>Results</h5>\n          <div className=\"d-flex flex-row\">\n            <ul className=\"list-group justify-content-between align-items-center\">\n              {this.props.results.map((result, i) => (\n                <li\n                  className=\"list-group-item\"\n                  key={i}\n                  style={\n                    this.props.activeId === i\n                      ? { backgroundColor: \"#ccf3ff\" }\n                      : {}\n                  }\n                >\n                  <Result\n                    result={result}\n                    id={i}\n                    active={\n                      this.props.activeId === i\n                        ? this.props.active\n                        : [false, false, false]\n                    }\n                    /*onClick={this.props.onClick}*/\n                    onDeleteResult={this.props.onDeleteResult}\n                    onShowResult={this.props.onShowResult}\n                    onDisplayInitialRoute={this.props.onDisplayInitialRoute}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainCanvas;\n","export default class Result {\n  constructor(initialRoute, coords, dist_matrix) {\n    this.initialRoute = initialRoute;\n    this.coords = coords;\n    this.dist_matrix = dist_matrix;\n    this.local = {\n      route: [],\n      routeCost: undefined,\n      elapsedTime: undefined\n    };\n    this.tabu = {\n      route: [],\n      routeCost: undefined,\n      elapsedTime: undefined\n    };\n    this.pso = {\n      route: [],\n      routeCost: undefined,\n      elapsedTime: undefined\n    };\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport p5 from \"p5\";\nimport utils from \"./utils/utils.js\";\nimport solutionMethods from \"./utils/solutionMethods\";\nimport GraphClass from \"./components/Graph.js\";\nimport LeftMenu from \"./components/LeftMenu\";\nimport MainCanvas from \"./components/MainCanvas\";\nimport ResultObj from \"./objects/Result\";\n\nclass App extends Component {\n  state = {\n    coords: [],\n    dist_matrix: [],\n    canvas: null,\n    graph: null,\n    initialRoute: [],\n    route: [],\n    cities: undefined,\n    solving: false,\n    test: undefined,\n    results: [],\n    graphId: -1,\n    active: [false, false, false]\n  };\n\n  componentDidMount() {\n    this.setState({\n      graphWidth: document.getElementById(\"graph\").clientWidth,\n      graphHeight: document.getElementById(\"graph\").clientHeight\n    });\n  }\n\n  defineActive(method) {\n    let active = [...this.state.active];\n    active.forEach((item, index) => {\n      active[index] = false;\n    });\n    if (method !== -1) active[method] = true;\n    return active;\n  }\n\n  resetCanvasDiv(full) {\n    if (full)\n      document.getElementById(\"graph\").innerHTML =\n        \"<p> Graph not initialized! </p>\";\n    else document.getElementById(\"graph\").innerHTML = \"\";\n  }\n\n  handleDeleteResult(id) {\n    let results = [...this.state.results];\n    results.splice(id, 1);\n    let graphId = -1;\n    if (results.length > 0) {\n      graphId = this.state.graphId - 1;\n      if (id === this.state.graphId) {\n        this.resetCanvasDiv();\n        let g = new GraphClass(\n          this.state.results[graphId].cities,\n          this.state.results[graphId].coords,\n          this.state.results[graphId].initialRoute,\n          this.state.graphWidth,\n          this.state.graphHeight\n        );\n        this.setState({\n          graph: g,\n          canvas: new p5(g.s, document.getElementById(\"graph\")),\n          cities: this.state.results[graphId].cities,\n          coords: this.state.results[graphId].coords,\n          initialRoute: this.state.results[graphId].initialRoute,\n          dist_matrix: this.state.results[graphId].dist_matrix,\n          results: results,\n          graphId: graphId,\n          active: [false, false, false]\n        });\n      } else {\n        /* deleted result is not active result*/\n        this.setState({ results: results, graphId: graphId });\n      }\n    } else {\n      /* results became empty*/\n      this.resetCanvasDiv(true);\n      this.setState({\n        graph: null,\n        canvas: null,\n        cities: [],\n        coords: [],\n        initialRoute: [],\n        dist_matrix: [],\n        results: results,\n        graphId: graphId,\n        active: [false, false, false]\n      });\n    }\n  }\n\n  handleShowResult(id, method) {\n    let route;\n    switch (method) {\n      case 0:\n        route = this.state.results[id].local.route;\n        break;\n      case 1:\n        route = this.state.results[id].tabu.route;\n        break;\n      case 2:\n        route = this.state.results[id].pso.route;\n        break;\n    }\n    this.resetCanvasDiv();\n    let g = new GraphClass(\n      this.state.results[id].cities,\n      this.state.results[id].coords,\n      route,\n      this.state.graphWidth,\n      this.state.graphHeight\n    );\n    let active = this.defineActive(method);\n    this.setState({\n      graph: g,\n      canvas: new p5(g.s, document.getElementById(\"graph\")),\n      cities: this.state.results[id].cities,\n      coords: this.state.results[id].coords,\n      initialRoute: this.state.results[id].initialRoute,\n      dist_matrix: this.state.results[id].dist_matrix,\n      graphId: id,\n      active: active\n    });\n  }\n\n  handleGenerateGraph(cities) {\n    let route = [];\n    let coords = [];\n    // Generate cities (coords)\n    for (let i = 0; i < cities; i++) {\n      route.push(i);\n      coords.push([\n        Math.random() * this.state.graphWidth,\n        Math.random() * this.state.graphHeight\n      ]);\n    }\n    const g = new GraphClass(\n      cities,\n      coords,\n      route, // change to [] if initial route should not be displayed\n      this.state.graphWidth,\n      this.state.graphHeight\n    );\n    this.resetCanvasDiv();\n    let dist_matrix = utils.assemble_dist_matrix(coords);\n    const id = this.state.results.length;\n    let results = [...this.state.results];\n    results.push(new ResultObj(route, coords, dist_matrix));\n    this.setState({\n      route: route,\n      initialRoute: route,\n      dist_matrix: dist_matrix,\n      cities: cities,\n      coords: coords,\n      graph: g,\n      canvas: new p5(g.s, document.getElementById(\"graph\")),\n      solving: false,\n      graphId: id,\n      results: results\n    });\n  }\n\n  handleDisplayInitialRoute(id) {\n    let g = new GraphClass(\n      this.state.results[id].cities,\n      this.state.results[id].coords,\n      this.state.results[id].initialRoute,\n      this.state.graphWidth,\n      this.state.graphHeight\n    );\n    this.resetCanvasDiv();\n    this.setState({\n      graph: g,\n      canvas: new p5(g.s, document.getElementById(\"graph\")),\n      cities: this.state.results[id].cities,\n      coords: this.state.results[id].coords,\n      initialRoute: this.state.results[id].initialRoute,\n      dist_matrix: this.state.results[id].dist_matrix,\n      graphId: id,\n      active: [false, false, false]\n    });\n  }\n\n  buildResult(method, route, routeCost, elapsedTime) {\n    let result = [...this.state.results][this.state.graphId];\n    let results = [...this.state.results];\n    if (method === 0) {\n      [result.local.route, result.local.routeCost, result.local.elapsedTime] = [\n        route,\n        routeCost,\n        elapsedTime\n      ];\n    } else if (method === 1) {\n      [result.tabu.route, result.tabu.routeCost, result.tabu.elapsedTime] = [\n        route,\n        routeCost,\n        elapsedTime\n      ];\n    } else if (method === 2) {\n      [result.pso.route, result.pso.routeCost, result.pso.elapsedTime] = [\n        route,\n        routeCost,\n        elapsedTime\n      ];\n    }\n    results[this.state.graphId] = result;\n    return results;\n  }\n\n  handleSolveCallback(route, routeCost, elapsedTime) {\n    if (this.state.coords.length > 0) {\n      let g = new GraphClass(\n        this.state.cities,\n        this.state.coords,\n        route,\n        this.state.graphWidth,\n        this.state.graphHeight\n      );\n      this.resetCanvasDiv();\n      let results = this.buildResult(\n        document.getElementById(\"solutionMethodSelect\").selectedIndex,\n        route,\n        routeCost,\n        elapsedTime\n      );\n      this.setState({\n        graph: g,\n        canvas: new p5(g.s, document.getElementById(\"graph\")),\n        solving: false,\n        route: route,\n        results: results\n      });\n    }\n  }\n\n  handleSolve(solutionMethod, callback) {\n    if (this.state.solving) {\n      console.log(\"Already solving!\");\n    } else if (this.state.initialRoute.length > 0) {\n      this.setState(\n        {\n          solving: true\n        },\n        () => {\n          switch (solutionMethod) {\n            case 0: // local search\n              setTimeout(() => {\n                solutionMethods.localSearch(\n                  this.state.initialRoute,\n                  this.state.dist_matrix,\n                  callback\n                );\n              }, 1000);\n              break;\n            case 1: // tabu search\n              setTimeout(() => {\n                solutionMethods.tabuSearch(\n                  this.state.initialRoute,\n                  this.state.dist_matrix,\n                  document.getElementById(\"inputTabuTenureSize\").value,\n                  document.getElementById(\"inputAttemptsWithoutImprovement\")\n                    .value,\n                  callback\n                );\n              }, 1000);\n              break;\n            case 2: // PSO\n              setTimeout(() => {\n                solutionMethods.PSO(\n                  this.state.initialRoute,\n                  this.state.dist_matrix,\n                  document.getElementById(\"inputParticlesCount\").value,\n                  document.getElementById(\"inputAttemptsWithoutImprovement\")\n                    .value,\n                  callback\n                );\n              }, 1000);\n              break;\n          }\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <LeftMenu\n          onGenerateGraph={this.handleGenerateGraph.bind(this)}\n          onSolve={this.handleSolve.bind(this)}\n          onSolveCallback={this.handleSolveCallback.bind(this)}\n          solving={this.state.solving}\n        />\n        <MainCanvas\n          id=\"mainCanvas\"\n          results={this.state.results}\n          onDeleteResult={this.handleDeleteResult.bind(this)}\n          onShowResult={this.handleShowResult.bind(this)}\n          onDisplayInitialRoute={this.handleDisplayInitialRoute.bind(this)}\n          activeId={this.state.graphId}\n          active={this.state.active}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
